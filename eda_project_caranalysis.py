# -*- coding: utf-8 -*-
"""EDA-Project-CarAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Z1k4wGAzsP2EwA0OCg5OPRa6StlhO-K
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline
sns.set(color_codes=True)
from scipy import stats
import warnings
warnings.filterwarnings('ignore')

df=pd.read_csv('/content/15.mtcars.csv')
df

# GET dataTypes of each columns numbers
df.info()

cols_to_drop=['Engine Fuel Type', 'Market Category', 'Vehicle Style', 'Popularity', 'Number of Doors', 'Vehicle Size']
df.drop(cols_to_drop, axis=1, inplace=True)

df

"""rename cols"""

rename_cols={"Engine HP":"HP", "Engine Cylinders":"Cylinders", "Transmission Type":"Transmission", "Driven_Wheels":"Drive"}
df.rename(columns=rename_cols, inplace=True)
#

df

df.count()

df=df.drop_duplicates()
df.count()

df=df.dropna()
# df[df==?]=np.nan somtimes if there is null vaues are difined with

df.isnull().sum()

# after removing null values form the datasets we do decribes the statitics of df
df.describe()

sns.boxplot(x=df["MSRP"])
plt.show()

sns.boxplot(x=df["HP"])
plt.show()

sns.boxplot(x=df["Cylinders"])
plt.show()

sns.boxplot(x=df["highway MPG"])
plt.show()

sns.boxplot(x=df["city mpg"])
plt.show()

df=df.loc[:,df.dtypes!=object]

# define Q1 and Q2
Q1=df.quantile(0.25)
Q3=df.quantile(0.75)

#Define QIR (Interquantile Range)
IQR=Q3-Q1

#Define df2 after removing outliers
df2=df[~((df<(Q1-1.5*IQR)) | (df>(Q3+1.5*IQR)))]

sns.boxplot(x=df2["city mpg"])
plt.show()

sns.boxplot(x=df2["highway MPG"])
plt.show()

sns.boxplot(x=df2["Cylinders"])
plt.show()

df2.describe()

#this shows the distributions of all data sets
sns.distplot(df['HP'])
plt.show()

df3=pd.read_csv('/content/15.mtcars.csv')
df3

plt.figure(figsize=(12,6))

#use the largest and then .plot to get bar plot like below output
df3.Make.value_counts().nlargest(40).plot(kind='bar', figsize=(12,6))

plt.title("Number of cars by make")
plt.ylabel('Number of cars')
plt.xlabel('Make');
#

df3=df3.dropna()

plt.figure(figsize=(15,6))

#plot countplot on the transmission and drive mode
sns.countplot(x='Transmission Type',hue='Driven_Wheels',data=df3)
plt.show()

df3

fig, ax = plt.subplots(figsize=(10,6))

#plot scatterplot on hp and price
ax.scatter(df3['Engine HP'],df3['MSRP'])
ax.set_xlabel('Engine HP')
ax.set_ylabel('MSRP')
plt.show()
#

# Create the figure with the desired figsize
fig = plt.figure(figsize=(10, 6))

# Add a subplot to the figure
ax = fig.add_subplot(1, 1, 1)  # 1 row, 1 column, 1st subplot

# Plot scatterplot on hp and price
ax.scatter(df3['Engine HP'], df3['MSRP'])
ax.set_xlabel('Engine HP')
ax.set_ylabel('MSRP')
plt.show()